{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","todosWithUser","App","useState","setTodos","titleName","setTitleName","titleNameError","setTitleNameError","setUserId","userIdError","setUserIdError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","prevTodos","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7119c6d3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","/* eslint-disable import/no-cycle */\nimport { User } from '../../App';\n\nexport interface UserProps {\n  user: User;\n}\n\nexport const UserInfo = ({ user }: UserProps) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n  >\n    {user.name}\n  </a>\n);\n","/* eslint-disable import/no-cycle */\nimport { Todo } from '../../App';\nimport { TodoListProps } from '../TodoList';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ninterface TodoInfoProps extends TodoListProps {\n  todo: Todo;\n}\n\nexport const TodoInfo = ({ todo }: TodoInfoProps) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","/* eslint-disable import/no-cycle */\nimport { Todo } from '../../App';\nimport { TodoInfo } from '../TodoInfo';\n\nexport interface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList = ({ todos }: TodoListProps) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} key={todo.id} todos={[]} />\n    ))}\n  </section>\n);\n","/* eslint-disable import/no-cycle */\nimport './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\nexport interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user: User | null;\n}\n\nfunction getUserById(userId: number):User | null {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nexport const todosWithUser = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosWithUser);\n  const [titleName, setTitleName] = useState('');\n  const [titleNameError, setTitleNameError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n\n  function reset() {\n    setTitleName('');\n    setUserId(0);\n  }\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const nextId = Math.max(...todos.map((todo) => todo.id)) + 1;\n\n    const newTodo: Todo = {\n      id: nextId,\n      title: titleName,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    if (!titleName) {\n      setTitleNameError(true);\n    }\n\n    if (!userId) {\n      setUserIdError(true);\n    }\n\n    if (!titleName || !userId) {\n      return;\n    }\n\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={titleName}\n            onChange={event => {\n              setTitleName(event.target.value);\n              setTitleNameError(false);\n            }}\n            placeholder=\"Enter a title\"\n          />\n          {titleNameError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={event => {\n              setUserId(+event.target.value);\n              setUserIdError(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userIdError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <h1 className=\"App__title\">Static list of todos</h1>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}